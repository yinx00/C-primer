#include<iostream>
#include<map>
#include<set>
#include<unordered_map>
#include<unordered_set> //包含关联容器的头文件
//关联容器map,set
//关联容器有map/set/multimap/multiset/unordered_set/unordered_map/unordered_multimap/unordered_multiset
// 允许重复关键字的容器中包含multi,不保持关键词按顺序存储的容器的名字都以单词unordered开始
// 所以  unordered_multimap  是个允许重复关键字，并且不会保持关键词顺序的map容器
// map  则是一个要求不重复关键词，有序存储的集合
// 
// map是 关键字—值 对的集合，map类型通常被称为关联数组
// set则是关键字的简单集合。
// 

int main()
{
	//统计每个单词在输入中出现的次数
	std::map<std::string, size_t> word_count;  //string(关键字)到size_t(值)的空map;
	std::string word;                   //为定义一个map，我们必须指定关键字和值得类型
	/*while (std::cin >> word)
	{
		++word_count[word];
	}
	for (const auto& w : word_count)
	{
		std::cout << w.first << " occurs " << w.second << ((w.second > 1) ? "times" : "time") << std::endl;
	}*/

	std::set<std::string> exculude = { "the","and","or" };  //定义一个set，指定其关键字的类型
	while (std::cin >> word)
	{
		if (exculude.find(word) == exculude.end())
			++word_count[word];         //map类型的下标操作，如果word未在word_count中，下标运算符会创建一个新元素，值为0；前置递增后+1

	}
	return 0;
}
