#include<iostream>
#include<vector>
#include<istream>
#include<fstream>//getline(,)
#include<sstream> //istringstream/ostringstream/stringstream
#include<map>
#include<set>

//ofstream是从内存到硬盘，ifstream是从硬盘到内存，其实所谓的流缓冲就是内存空间

std::map<std::string, std::string> buildMap(std::ifstream& map_file)  //参数为以一个输入文件，每输入一行第一个单词为key，后面的为转换
{
	std::map<std::string, std::string> trans_map;
	std::string key;
	std::string value;
	while (map_file >> key && getline(map_file, value)) //读取第一个单词存入key中，行中剩余内容存入value中
	{
		if (value.size() > 1)
			trans_map[key] = value.substr(1);//跳过空格，复制value
		//此处创建一个 key-value 的pair,该pair是trans_map的元素
		//value.substr(pos,len) 这个语句返回一个string，从value的第pos处开始复制len长度，pos默认为0，len默认为value.size()-pos
		else
			throw std::runtime_error("no rule for" + key);//异常处理
	}
	return trans_map;
}//建立转换映射
const std::string& transform(const std::string& s, const std::map<std::string, std::string>& m)
{
	auto map_it = m.find(s);
	if (map_it != m.end())
	{
		return map_it->second;
	}
	else return s;               
}//转换函数，如果s在map里面的话，用map中的元素s关联的值转化s
void word_transform(std::ifstream& map_file, std::ifstream& input)
{
	auto trans_map = buildMap(map_file);//利用map_file创建一个map
	std::string text;
	while (getline(input, text))
	{
		std::istringstream stream(text);  //istringstream 的作用是从text中读取字符，头文件为<sstream>
		std::string word;
		bool firstword = true;
		while (stream >> word)//每一次将text(input里的一行)中的一个单词输入到word
		{
			if (firstword)
				firstword = false;//第一个不打空格
			else
				std::cout << " ";
			std::cout << transform(word, trans_map);//输出trans_map中的second成员
		}
		std::cout << std::endl;
	}
}

int main()
{
	std::ifstream transrule("C:\\Users\\落雪飞花\\Desktop\\zhuanhuanguize.txt");
	std::ifstream input("C:\\Users\\落雪飞花\\Desktop\\shuruwendang.txt");
	if (!transrule.is_open())
	{
		std::cout << "error!";
	}
	/*auto test_map = buildMap(transrule);
	for (const auto x:test_map)
	{
		std::cout << x.first << " " << x.second << std::endl;
	}*/
	word_transform(transrule, input);
	transrule.close();
	input.close();
	return 0;
}
